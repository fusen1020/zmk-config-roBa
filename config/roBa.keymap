#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab_L {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab_L {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp SQT>;
            key-positions = <20 21>;
        };

        eq_L {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        eq_R {
            bindings = <&kp EQUAL>;
            key-positions = <31 30>;
        };

        taskview_L {
            bindings = <&kp LG(TAB)>;
            key-positions = <11 12 13>;
        };

        taskvie_R {
            bindings = <&kp RG(TAB)>;
            key-positions = <20 19 18>;
        };

        tab_R {
            bindings = <&kp TAB>;
            key-positions = <19 20>;
        };

        shift_tab_R {
            bindings = <&kp RS(TAB)>;
            key-positions = <19 18>;
        };

        minus_R {
            bindings = <&kp MINUS>;
            key-positions = <9 8>;
        };

        Desktop_R_R {
            bindings = <&kp RG(RC(RIGHT_ARROW))>;
            key-positions = <20 19 18 41>;
        };

        Desktop_L_R {
            bindings = <&kp RG(RC(LEFT_ARROW))>;
            key-positions = <20 19 18 40>;
        };

        Desktop_R_L {
            bindings = <&kp RG(RC(RIGHT_ARROW))>;
            key-positions = <39 11 12 13>;
        };

        Desktop_L_L {
            bindings = <&kp RG(RC(LEFT_ARROW))>;
            key-positions = <38 13 12 11>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W         &kp E         &kp R                       &kp T                                                                                 &kp Y                   &kp U  &lt 5 I    &kp O    &lt 5 P
&mt LEFT_CONTROL A  &kp S         &kp D         &kp F                       &kp G                   &kp ESCAPE                       &kp ESCAPE                   &kp H                   &kp J  &kp K      &lt 4 L  &mt RCTRL SEMICOLON
&mt LEFT_SHIFT Z    &kp X         &kp C         &kp V                       &kp B                   &kp LEFT_BRACKET                 &kp RIGHT_BRACKET            &kp N                   &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&kp LCTRL           &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 4 BACKSPACE  &lt_to_layer_0 1 SPACE  &lt_to_layer_0 3 LANGUAGE_2      &lt_to_layer_0 3 LANGUAGE_1  &lt_to_layer_0 2 ENTER                             &lt_to_layer_0 6 DELETE
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&trans  &kp F7  &kp F8  &kp F9         &kp F10                        &trans     &kp N7        &kp N8        &kp N9        &kp N0
&trans  &kp F4  &kp F5  &kp F6         &kp F11    &trans      &trans  &trans     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS
&trans  &kp F1  &kp F2  &kp F3         &kp F12    &trans      &trans  &trans     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans
&trans  &trans  &trans  &kp BACKSPACE  &kp SPACE  &trans      &trans  &kp ENTER                                            &kp DELETE
            >;
        };

        NUM {
            bindings = <
&trans  &trans  &trans  &trans         &trans                                  &trans     &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&trans  &trans  &trans  &trans         &trans     &trans      &kp RC(TAB)      &trans     &kp DOLLAR       &kp PERCENT   &kp CARET             &kp MINUS
&trans  &trans  &trans  &trans         &trans     &trans      &kp RC(RS(TAB))  &trans     &kp EXCLAMATION  &kp AT_SIGN   &kp HASH              &trans
&trans  &trans  &trans  &kp BACKSPACE  &kp SPACE  &trans      &trans           &kp ENTER                                                       &kp DEL
            >;
        };

        ARROW {
            bindings = <
&trans         &kp HOME        &kp UP_ARROW    &kp END          &trans                                                   &trans         &kp HOME        &kp UP_ARROW    &kp END          &trans
&kp LS(LG(S))  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PG_UP      &kp LC(PG_UP)          &kp RC(PG_UP)      &kp PG_UP      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp RS(RG(S))
&trans         &trans          &trans          &trans           &kp PAGE_DOWN  &kp LC(PAGE_DOWN)      &kp RC(PAGE_DOWN)  &kp PAGE_DOWN  &trans          &trans          &trans           &trans
&trans         &trans          &trans          &trans           &trans         &trans                 &trans             &trans                                                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans     &trans     &trans                      &trans  &trans    &mkp MB3  &trans  &trans
&trans  &trans  &kp LC(W)  &kp LC(T)  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB2  &trans  &trans
&trans  &trans  &trans     &trans     &trans  &trans      &trans  &trans  &mkp MB4  &mkp MB5  &trans  &trans
&trans  &trans  &trans     &trans     &trans  &trans      &trans  &trans                              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                                   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &bt BT_CLR          &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &bt BT_CLR_ALL      &bootloader  &trans        &trans        &trans        &trans        &trans
&trans  &trans        &trans        &trans        &trans  &trans              &trans       &trans                                                  &trans
            >;
        };
    };
};
